<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on KryoLogs</title><link>https://KalebHawkins.github.io/KryoLogs/</link><description>Recent content in Home on KryoLogs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://KalebHawkins.github.io/KryoLogs/index.xml" rel="self" type="application/rss+xml"/><item><title>Openshift - Managing/Modifing Machinesets</title><link>https://KalebHawkins.github.io/KryoLogs/posts/openshift/machinesets/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>https://KalebHawkins.github.io/KryoLogs/posts/openshift/machinesets/</guid><description>In this document we are going to review the process of modifing a machineset to increase resources, for this example we will be increasing memory.
Modify The Machineset In the first step we modify the machine set we want to modify. First we decide which machineset we want to modify we can get the machinesets using the following.
oc get machineset -n openshift-machine-api Now we want to modify our machineset&amp;rsquo;s memory.</description></item><item><title>Red Hat - 8.5 VMWare Template</title><link>https://KalebHawkins.github.io/KryoLogs/posts/linux/redhat/vmware-template/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://KalebHawkins.github.io/KryoLogs/posts/linux/redhat/vmware-template/</guid><description>Prerequisites Create the Virtual Machine Prepare for Red Hat Installation Red Hat Installation Template Configuration Prerequisites Access to Red Hat&amp;rsquo;s access portal to download the Red Hat ISO. An active Red Hat Enterprise Linux subscription. Create the Virtual Machine Sign into vCenter.
Right-click the cluster you want to create the virtual machine on.
Select New Virtual Machine.
Set the name and select a folder to place the template in.</description></item><item><title>Red Hat - HAProxy &amp; Keepalived</title><link>https://KalebHawkins.github.io/KryoLogs/posts/linux/redhat/haproxycluster/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://KalebHawkins.github.io/KryoLogs/posts/linux/redhat/haproxycluster/</guid><description>Install Required Packages Configure Keepalived Configure HAProxy Install Required Packages Install haproxy and keepalived packages.
dnf install -y keepalived haproxy Configure Keepalived Configure firewall rules for keepalived VRRP protocol.
firewall-cmd --add-rich-rule=&amp;#39;rule protocol value=&amp;#34;vrrp&amp;#34; accept&amp;#39; --permanent firewall-cmd --reload Configure keepalived.
vi /etc/keepalived/keepalived.conf global_defs { notification_email { admin@example.com } notification_email_from noreply@example.com smtp_server 127.0.0.1 smtp_connect_timeout 60 } vrrp_script chk_haproxy { script &amp;#34;killall -0 haproxy&amp;#34; # check the haproxy process interval 2 # every 2 seconds weight 2 # add 2 points if OK } vrrp_instance VI_1 { interface eth0 # interface to monitor state MASTER # MASTER on haproxy, BACKUP on haproxy2 virtual_router_id 51 priority 101 # 101 on haproxy, 100 on haproxy2 authentication { auth_type PASS auth_pass {{ auth_pass }} } virtual_ipaddress { 192.</description></item><item><title>Openshift - Clsuter Ownership Transfer</title><link>https://KalebHawkins.github.io/KryoLogs/posts/openshift/ownership-transfer/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://KalebHawkins.github.io/KryoLogs/posts/openshift/ownership-transfer/</guid><description>Overview Transfering Ownership Update the Pull Secret Verification Steps Reference Overview There are two steps to transfer ownership to a new user or organization.
Initiate the transfer in Openshift Cluster Manager. Change the cluster pull secret to the new owner&amp;rsquo;s pull secret from CLI, The second step must take place within 5 days of the transfer initiation of cluster transfer from the Openshift Cluster Manager.
Transfering Ownership Login to the Openshift Cluster Manager as the current owner.</description></item><item><title>About</title><link>https://KalebHawkins.github.io/KryoLogs/about/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://KalebHawkins.github.io/KryoLogs/about/</guid><description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
https://github.com/yuin/goldmark https://github.</description></item></channel></rss>